version: '3.8'
services:
  db:
    image: mysql
    container_name: db
    restart: always
    environment:
      MYSQL_DATABASE: 'dev'
      MYSQL_PASSWORD: 'root'
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      - '3306:3306'
    networks:
      - testenv-network
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=root --execute \"SHOW DATABASES;\""
      interval: 2s
      timeout: 20s
      retries: 10
    cpus: '1'
    mem_limit: 1G
    labels:
      co.elastic.logs/module: "mysql"
      co.elastic.logs/fileset.stdout: "slowlog"
      co.elastic.logs/fileset.stderr: "error"


  httpd:
    image: httpd
    container_name: httpd
    ports:
      - '80:80'
    networks:
      - testenv-network
    volumes:
      - ./additional/httpd.conf:/usr/local/apache2/conf/httpd.conf
    cpus: '1'
    mem_limit: 256M
    labels:
      co.elastic.logs/module: "apache"
      co.elastic.logs/fileset.stdout: "access"
      co.elastic.logs/fileset.stderr: "error"


  application1:
    container_name: app1
    build:
      context: ./
      dockerfile: Dockerfile
    networks:
      - testenv-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 20s
      retries: 5
    depends_on:
      - db
      - httpd
    cpus: '1'
    mem_limit: 256M
    labels:
      co.elastic.logs/module: "java"
      co.elastic.logs/fileset.stdout: "gc"
      co.elastic.logs/fileset.stderr: "error"


  # application2:
  #   container_name: app2
  #   build:
  #     context: ./
  #     dockerfile: Dockerfile
  #   networks:
  #     - testenv-network
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
  #     interval: 10s
  #     timeout: 20s
  #     retries: 5
  #   depends_on:
  #     - db
  #     - httpd
  #   cpus: '1'
  #   mem_limit: 1G
  #   labels:
  #     co.elastic.logs/module: "java"
  #     co.elastic.logs/fileset.stdout: "gc"
  #     co.elastic.logs/fileset.stderr: "error"

  influxdb:
    image: influxdb
    container_name: influxdb
    environment:
      DOCKER_INFLUXDB_INIT_MODE: 'setup'
      DOCKER_INFLUXDB_INIT_USERNAME: 'influx'
      DOCKER_INFLUXDB_INIT_PASSWORD: 'pw123456'
      DOCKER_INFLUXDB_INIT_ORG: 'testenv'
      DOCKER_INFLUXDB_INIT_BUCKET: 'metricdb'
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: 3gH3gJHl6d2QhwkRpPslL2g8UHt7H3kNj3KlN2jN2K
    volumes:
      - influxdb-data:/var/lib/influxdb
    ports:
      - "8086:8086"
    networks:
      - testenv-network
    cpus: '1'
    mem_limit: 1G

  telegraf:
    image: telegraf:latest
    container_name: telegraf
    volumes:
      - ./additional/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - testenv-network
    depends_on:
      application1:
        condition: service_healthy
      # application2:
      #   condition: service_healthy
      db:
        condition: service_healthy
    cpus: '0.5'
    mem_limit: 256M

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ELASTIC_PASSWORD=elastic
    ports:
      - "9200:9200"
    networks:
      - testenv-network
    volumes:
      - esdata:/usr/share/elasticsearch/data
    cpus: '2'
    mem_limit: 1.5G

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.10.2
    container_name: filebeat
    command: filebeat -e -strict.perms=false
    user: root
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./additional/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - testenv-network
    depends_on:
      - elasticsearch
    cpus: '0.5'
    mem_limit: 256M

  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.2
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_USERNAME: kibana_system
      ELASTICSEARCH_PASSWORD: elastic
    networks:
      - testenv-network
    depends_on:
      - elasticsearch
    cpus: '1'
    mem_limit: 1G

networks:
  testenv-network:
    name: testenv-network
    driver: bridge

volumes:
  esdata:
    driver: local
  influxdb-data:
    driver: local
