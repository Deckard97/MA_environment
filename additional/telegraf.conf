[global_tags]

[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "5s"
  flush_interval = "10s"
  flush_jitter = "5s"
  omit_hostname = true

## OUTPUT PLUGINS
[[outputs.influxdb_v2]]
  urls = ["http://influxdb:8086"]
  token = "3gH3gJHl6d2QhwkRpPslL2g8UHt7H3kNj3KlN2jN2K"
  organization = "testenv"
  bucket = "metricdb"

## INPUT PLUGINS
# MySQL/MariaDB
[[inputs.mysql]]
  servers = ["root:root@tcp(db:3306)/"]

# Apache
[[inputs.apache]]
  urls = ["http://httpd/server-status?auto"]

# Docker
[[inputs.docker]]
  endpoint = "unix:///var/run/docker.sock"
  timeout = "5s"
  container_name_include = [
    "httpd", 
    "app1", 
    "app2",
    "db"
  ]

# Spring Boot Actuator Prometheus Metrics
[[inputs.prometheus]]
  urls = [
    "http://app1:8080/actuator/prometheus",
    "http://app2:8080/actuator/prometheus"
  ]
  metric_version = 2
  interval = "10s"
  response_timeout = "5s"

# Service health
[[inputs.http]]
  urls = [
    "http://app1:8080/actuator/health",
    "http://app2:8080/actuator/health"
  ]
  data_format = "json_v2"
  
  [[inputs.http.json_v2]]
    measurement_name = "service_health"
    
    [[inputs.http.json_v2.field]]
      path = "status"
      rename = "service_status"
      
    # [[inputs.http.json_v2.object]]
    #   path = "components.db"
    #   tags = ["status"]
      
    # [[inputs.http.json_v2.object]]
    #   path = "components.diskSpace"
    #   tags = ["status"]
      
    # [[inputs.http.json_v2.object]]
    #   path = "components.ping"
    #   tags = ["status"]
