# Load required modules
LoadModule slotmem_shm_module modules/mod_slotmem_shm.so
LoadModule unixd_module modules/mod_unixd.so
LoadModule log_config_module modules/mod_log_config.so
LoadModule headers_module modules/mod_headers.so
LoadModule proxy_module modules/mod_proxy.so
LoadModule proxy_balancer_module modules/mod_proxy_balancer.so
LoadModule proxy_http_module modules/mod_proxy_http.so
LoadModule lbmethod_byrequests_module modules/mod_lbmethod_byrequests.so
LoadModule mpm_worker_module modules/mod_mpm_worker.so
LoadModule authz_core_module modules/mod_authz_core.so
LoadModule status_module modules/mod_status.so

# Ensure that Apache listens on port 80
Listen 80

ServerName localhost

# Define custom log format
LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined

# Define error log
ErrorLog "/mnt/logs/httpd/error_log"
# ErrorLog "/proc/self/fd/2"

# Specify the level of error messages
LogLevel warn

# User and group to run as
User daemon
Group daemon

<VirtualHost *:80>
    ServerName localhost
    ProxyRequests Off
    Header add Set-Cookie "ROUTEID=.%{BALANCER_WORKER_ROUTE}e; path=/" env=BALANCER_ROUTE_CHANGED

    <Proxy balancer://mycluster>
        # Backend server 1
        BalancerMember http://application1:8080 route=1
        # Backend server 2
        # BalancerMember http://application2:8080 route=2
        
        # Load balancing method
        ProxySet lbmethod=byrequests
    </Proxy>

    # Point URL path to the balancer
    ProxyPass /server-status !
    ProxyPass / balancer://mycluster/ stickysession=ROUTEID
    ProxyPassReverse / balancer://mycluster/

    ProxyPreserveHost On

    # Allow access to the root path
    <Location />
        Require all granted
    </Location>

    # Enable and allow access to server status
    <Location /server-status>
        SetHandler server-status
        Require all granted
    </Location>

    # Define access log
    CustomLog "/mnt/logs/httpd/access_log" combined
    # CustomLog "/proc/self/fd/1" combined
</VirtualHost>
